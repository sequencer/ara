diff --git a/include/ara_pkg.sv b/include/ara_pkg.sv
index 2f59fcb..3b41478 100644
--- a/include/ara_pkg.sv
+++ b/include/ara_pkg.sv
@@ -776,32 +776,270 @@ package ara_pkg;
     unique case (NrLanes)
       1: begin
         automatic vlen_t [7:0] index;
-        for (int b = 0; b < 8; b++)
-          index[shuffle_index(b, NrLanes, ew)] = b;
+        index[shuffle_index(0, NrLanes, ew)] = 0;
+        index[shuffle_index(1, NrLanes, ew)] = 1;
+        index[shuffle_index(2, NrLanes, ew)] = 2;
+        index[shuffle_index(3, NrLanes, ew)] = 3;
+        index[shuffle_index(4, NrLanes, ew)] = 4;
+        index[shuffle_index(5, NrLanes, ew)] = 5;
+        index[shuffle_index(6, NrLanes, ew)] = 6;
+        index[shuffle_index(7, NrLanes, ew)] = 7;
         return index[byte_index[2:0]];
       end
       2: begin
         automatic vlen_t [15:0] index;
-        for (int b = 0; b < 16; b++)
-          index[shuffle_index(b, NrLanes, ew)] = b;
+        index[shuffle_index(0, NrLanes, ew)] = 0;
+        index[shuffle_index(1, NrLanes, ew)] = 1;
+        index[shuffle_index(2, NrLanes, ew)] = 2;
+        index[shuffle_index(3, NrLanes, ew)] = 3;
+        index[shuffle_index(4, NrLanes, ew)] = 4;
+        index[shuffle_index(5, NrLanes, ew)] = 5;
+        index[shuffle_index(6, NrLanes, ew)] = 6;
+        index[shuffle_index(7, NrLanes, ew)] = 7;
+        index[shuffle_index(8, NrLanes, ew)] = 8;
+        index[shuffle_index(9, NrLanes, ew)] = 9;
+        index[shuffle_index(10, NrLanes, ew)] = 10;
+        index[shuffle_index(11, NrLanes, ew)] = 11;
+        index[shuffle_index(12, NrLanes, ew)] = 12;
+        index[shuffle_index(13, NrLanes, ew)] = 13;
+        index[shuffle_index(14, NrLanes, ew)] = 14;
+        index[shuffle_index(15, NrLanes, ew)] = 15;
         return index[byte_index[3:0]];
       end
       4: begin
         automatic vlen_t [31:0] index;
-        for (int b = 0; b < 32; b++)
-          index[shuffle_index(b, NrLanes, ew)] = b;
+        index[shuffle_index(0, NrLanes, ew)] = 0;
+        index[shuffle_index(1, NrLanes, ew)] = 1;
+        index[shuffle_index(2, NrLanes, ew)] = 2;
+        index[shuffle_index(3, NrLanes, ew)] = 3;
+        index[shuffle_index(4, NrLanes, ew)] = 4;
+        index[shuffle_index(5, NrLanes, ew)] = 5;
+        index[shuffle_index(6, NrLanes, ew)] = 6;
+        index[shuffle_index(7, NrLanes, ew)] = 7;
+        index[shuffle_index(8, NrLanes, ew)] = 8;
+        index[shuffle_index(9, NrLanes, ew)] = 9;
+        index[shuffle_index(10, NrLanes, ew)] = 10;
+        index[shuffle_index(11, NrLanes, ew)] = 11;
+        index[shuffle_index(12, NrLanes, ew)] = 12;
+        index[shuffle_index(13, NrLanes, ew)] = 13;
+        index[shuffle_index(14, NrLanes, ew)] = 14;
+        index[shuffle_index(15, NrLanes, ew)] = 15;
+        index[shuffle_index(16, NrLanes, ew)] = 16;
+        index[shuffle_index(17, NrLanes, ew)] = 17;
+        index[shuffle_index(18, NrLanes, ew)] = 18;
+        index[shuffle_index(19, NrLanes, ew)] = 19;
+        index[shuffle_index(20, NrLanes, ew)] = 20;
+        index[shuffle_index(21, NrLanes, ew)] = 21;
+        index[shuffle_index(22, NrLanes, ew)] = 22;
+        index[shuffle_index(23, NrLanes, ew)] = 23;
+        index[shuffle_index(24, NrLanes, ew)] = 24;
+        index[shuffle_index(25, NrLanes, ew)] = 25;
+        index[shuffle_index(26, NrLanes, ew)] = 26;
+        index[shuffle_index(27, NrLanes, ew)] = 27;
+        index[shuffle_index(28, NrLanes, ew)] = 28;
+        index[shuffle_index(29, NrLanes, ew)] = 29;
+        index[shuffle_index(30, NrLanes, ew)] = 30;
+        index[shuffle_index(31, NrLanes, ew)] = 31;
         return index[byte_index[4:0]];
       end
       8: begin
         automatic vlen_t [63:0] index;
-        for (int b = 0; b < 64; b++)
-          index[shuffle_index(b, NrLanes, ew)] = b;
+        index[shuffle_index(0, NrLanes, ew)] = 0;
+        index[shuffle_index(1, NrLanes, ew)] = 1;
+        index[shuffle_index(2, NrLanes, ew)] = 2;
+        index[shuffle_index(3, NrLanes, ew)] = 3;
+        index[shuffle_index(4, NrLanes, ew)] = 4;
+        index[shuffle_index(5, NrLanes, ew)] = 5;
+        index[shuffle_index(6, NrLanes, ew)] = 6;
+        index[shuffle_index(7, NrLanes, ew)] = 7;
+        index[shuffle_index(8, NrLanes, ew)] = 8;
+        index[shuffle_index(9, NrLanes, ew)] = 9;
+        index[shuffle_index(10, NrLanes, ew)] = 10;
+        index[shuffle_index(11, NrLanes, ew)] = 11;
+        index[shuffle_index(12, NrLanes, ew)] = 12;
+        index[shuffle_index(13, NrLanes, ew)] = 13;
+        index[shuffle_index(14, NrLanes, ew)] = 14;
+        index[shuffle_index(15, NrLanes, ew)] = 15;
+        index[shuffle_index(16, NrLanes, ew)] = 16;
+        index[shuffle_index(17, NrLanes, ew)] = 17;
+        index[shuffle_index(18, NrLanes, ew)] = 18;
+        index[shuffle_index(19, NrLanes, ew)] = 19;
+        index[shuffle_index(20, NrLanes, ew)] = 20;
+        index[shuffle_index(21, NrLanes, ew)] = 21;
+        index[shuffle_index(22, NrLanes, ew)] = 22;
+        index[shuffle_index(23, NrLanes, ew)] = 23;
+        index[shuffle_index(24, NrLanes, ew)] = 24;
+        index[shuffle_index(25, NrLanes, ew)] = 25;
+        index[shuffle_index(26, NrLanes, ew)] = 26;
+        index[shuffle_index(27, NrLanes, ew)] = 27;
+        index[shuffle_index(28, NrLanes, ew)] = 28;
+        index[shuffle_index(29, NrLanes, ew)] = 29;
+        index[shuffle_index(30, NrLanes, ew)] = 30;
+        index[shuffle_index(31, NrLanes, ew)] = 31;
+        index[shuffle_index(32, NrLanes, ew)] = 32;
+        index[shuffle_index(33, NrLanes, ew)] = 33;
+        index[shuffle_index(34, NrLanes, ew)] = 34;
+        index[shuffle_index(35, NrLanes, ew)] = 35;
+        index[shuffle_index(36, NrLanes, ew)] = 36;
+        index[shuffle_index(37, NrLanes, ew)] = 37;
+        index[shuffle_index(38, NrLanes, ew)] = 38;
+        index[shuffle_index(39, NrLanes, ew)] = 39;
+        index[shuffle_index(40, NrLanes, ew)] = 40;
+        index[shuffle_index(41, NrLanes, ew)] = 41;
+        index[shuffle_index(42, NrLanes, ew)] = 42;
+        index[shuffle_index(43, NrLanes, ew)] = 43;
+        index[shuffle_index(44, NrLanes, ew)] = 44;
+        index[shuffle_index(45, NrLanes, ew)] = 45;
+        index[shuffle_index(46, NrLanes, ew)] = 46;
+        index[shuffle_index(47, NrLanes, ew)] = 47;
+        index[shuffle_index(48, NrLanes, ew)] = 48;
+        index[shuffle_index(49, NrLanes, ew)] = 49;
+        index[shuffle_index(50, NrLanes, ew)] = 50;
+        index[shuffle_index(51, NrLanes, ew)] = 51;
+        index[shuffle_index(52, NrLanes, ew)] = 52;
+        index[shuffle_index(53, NrLanes, ew)] = 53;
+        index[shuffle_index(54, NrLanes, ew)] = 54;
+        index[shuffle_index(55, NrLanes, ew)] = 55;
+        index[shuffle_index(56, NrLanes, ew)] = 56;
+        index[shuffle_index(57, NrLanes, ew)] = 57;
+        index[shuffle_index(58, NrLanes, ew)] = 58;
+        index[shuffle_index(59, NrLanes, ew)] = 59;
+        index[shuffle_index(60, NrLanes, ew)] = 60;
+        index[shuffle_index(61, NrLanes, ew)] = 61;
+        index[shuffle_index(62, NrLanes, ew)] = 62;
+        index[shuffle_index(63, NrLanes, ew)] = 63;
         return index[byte_index[5:0]];
       end
       16: begin
         automatic vlen_t [127:0] index;
-        for (int b = 0; b < 128; b++)
-          index[shuffle_index(b, NrLanes, ew)] = b;
+        index[shuffle_index(0, NrLanes, ew)] = 0;
+        index[shuffle_index(1, NrLanes, ew)] = 1;
+        index[shuffle_index(2, NrLanes, ew)] = 2;
+        index[shuffle_index(3, NrLanes, ew)] = 3;
+        index[shuffle_index(4, NrLanes, ew)] = 4;
+        index[shuffle_index(5, NrLanes, ew)] = 5;
+        index[shuffle_index(6, NrLanes, ew)] = 6;
+        index[shuffle_index(7, NrLanes, ew)] = 7;
+        index[shuffle_index(8, NrLanes, ew)] = 8;
+        index[shuffle_index(9, NrLanes, ew)] = 9;
+        index[shuffle_index(10, NrLanes, ew)] = 10;
+        index[shuffle_index(11, NrLanes, ew)] = 11;
+        index[shuffle_index(12, NrLanes, ew)] = 12;
+        index[shuffle_index(13, NrLanes, ew)] = 13;
+        index[shuffle_index(14, NrLanes, ew)] = 14;
+        index[shuffle_index(15, NrLanes, ew)] = 15;
+        index[shuffle_index(16, NrLanes, ew)] = 16;
+        index[shuffle_index(17, NrLanes, ew)] = 17;
+        index[shuffle_index(18, NrLanes, ew)] = 18;
+        index[shuffle_index(19, NrLanes, ew)] = 19;
+        index[shuffle_index(20, NrLanes, ew)] = 20;
+        index[shuffle_index(21, NrLanes, ew)] = 21;
+        index[shuffle_index(22, NrLanes, ew)] = 22;
+        index[shuffle_index(23, NrLanes, ew)] = 23;
+        index[shuffle_index(24, NrLanes, ew)] = 24;
+        index[shuffle_index(25, NrLanes, ew)] = 25;
+        index[shuffle_index(26, NrLanes, ew)] = 26;
+        index[shuffle_index(27, NrLanes, ew)] = 27;
+        index[shuffle_index(28, NrLanes, ew)] = 28;
+        index[shuffle_index(29, NrLanes, ew)] = 29;
+        index[shuffle_index(30, NrLanes, ew)] = 30;
+        index[shuffle_index(31, NrLanes, ew)] = 31;
+        index[shuffle_index(32, NrLanes, ew)] = 32;
+        index[shuffle_index(33, NrLanes, ew)] = 33;
+        index[shuffle_index(34, NrLanes, ew)] = 34;
+        index[shuffle_index(35, NrLanes, ew)] = 35;
+        index[shuffle_index(36, NrLanes, ew)] = 36;
+        index[shuffle_index(37, NrLanes, ew)] = 37;
+        index[shuffle_index(38, NrLanes, ew)] = 38;
+        index[shuffle_index(39, NrLanes, ew)] = 39;
+        index[shuffle_index(40, NrLanes, ew)] = 40;
+        index[shuffle_index(41, NrLanes, ew)] = 41;
+        index[shuffle_index(42, NrLanes, ew)] = 42;
+        index[shuffle_index(43, NrLanes, ew)] = 43;
+        index[shuffle_index(44, NrLanes, ew)] = 44;
+        index[shuffle_index(45, NrLanes, ew)] = 45;
+        index[shuffle_index(46, NrLanes, ew)] = 46;
+        index[shuffle_index(47, NrLanes, ew)] = 47;
+        index[shuffle_index(48, NrLanes, ew)] = 48;
+        index[shuffle_index(49, NrLanes, ew)] = 49;
+        index[shuffle_index(50, NrLanes, ew)] = 50;
+        index[shuffle_index(51, NrLanes, ew)] = 51;
+        index[shuffle_index(52, NrLanes, ew)] = 52;
+        index[shuffle_index(53, NrLanes, ew)] = 53;
+        index[shuffle_index(54, NrLanes, ew)] = 54;
+        index[shuffle_index(55, NrLanes, ew)] = 55;
+        index[shuffle_index(56, NrLanes, ew)] = 56;
+        index[shuffle_index(57, NrLanes, ew)] = 57;
+        index[shuffle_index(58, NrLanes, ew)] = 58;
+        index[shuffle_index(59, NrLanes, ew)] = 59;
+        index[shuffle_index(60, NrLanes, ew)] = 60;
+        index[shuffle_index(61, NrLanes, ew)] = 61;
+        index[shuffle_index(62, NrLanes, ew)] = 62;
+        index[shuffle_index(63, NrLanes, ew)] = 63;
+        index[shuffle_index(64, NrLanes, ew)] = 64;
+        index[shuffle_index(65, NrLanes, ew)] = 65;
+        index[shuffle_index(66, NrLanes, ew)] = 66;
+        index[shuffle_index(67, NrLanes, ew)] = 67;
+        index[shuffle_index(68, NrLanes, ew)] = 68;
+        index[shuffle_index(69, NrLanes, ew)] = 69;
+        index[shuffle_index(70, NrLanes, ew)] = 70;
+        index[shuffle_index(71, NrLanes, ew)] = 71;
+        index[shuffle_index(72, NrLanes, ew)] = 72;
+        index[shuffle_index(73, NrLanes, ew)] = 73;
+        index[shuffle_index(74, NrLanes, ew)] = 74;
+        index[shuffle_index(75, NrLanes, ew)] = 75;
+        index[shuffle_index(76, NrLanes, ew)] = 76;
+        index[shuffle_index(77, NrLanes, ew)] = 77;
+        index[shuffle_index(78, NrLanes, ew)] = 78;
+        index[shuffle_index(79, NrLanes, ew)] = 79;
+        index[shuffle_index(80, NrLanes, ew)] = 80;
+        index[shuffle_index(81, NrLanes, ew)] = 81;
+        index[shuffle_index(82, NrLanes, ew)] = 82;
+        index[shuffle_index(83, NrLanes, ew)] = 83;
+        index[shuffle_index(84, NrLanes, ew)] = 84;
+        index[shuffle_index(85, NrLanes, ew)] = 85;
+        index[shuffle_index(86, NrLanes, ew)] = 86;
+        index[shuffle_index(87, NrLanes, ew)] = 87;
+        index[shuffle_index(88, NrLanes, ew)] = 88;
+        index[shuffle_index(89, NrLanes, ew)] = 89;
+        index[shuffle_index(90, NrLanes, ew)] = 90;
+        index[shuffle_index(91, NrLanes, ew)] = 91;
+        index[shuffle_index(92, NrLanes, ew)] = 92;
+        index[shuffle_index(93, NrLanes, ew)] = 93;
+        index[shuffle_index(94, NrLanes, ew)] = 94;
+        index[shuffle_index(95, NrLanes, ew)] = 95;
+        index[shuffle_index(96, NrLanes, ew)] = 96;
+        index[shuffle_index(97, NrLanes, ew)] = 97;
+        index[shuffle_index(98, NrLanes, ew)] = 98;
+        index[shuffle_index(99, NrLanes, ew)] = 99;
+        index[shuffle_index(100, NrLanes, ew)] = 100;
+        index[shuffle_index(101, NrLanes, ew)] = 101;
+        index[shuffle_index(102, NrLanes, ew)] = 102;
+        index[shuffle_index(103, NrLanes, ew)] = 103;
+        index[shuffle_index(104, NrLanes, ew)] = 104;
+        index[shuffle_index(105, NrLanes, ew)] = 105;
+        index[shuffle_index(106, NrLanes, ew)] = 106;
+        index[shuffle_index(107, NrLanes, ew)] = 107;
+        index[shuffle_index(108, NrLanes, ew)] = 108;
+        index[shuffle_index(109, NrLanes, ew)] = 109;
+        index[shuffle_index(110, NrLanes, ew)] = 110;
+        index[shuffle_index(111, NrLanes, ew)] = 111;
+        index[shuffle_index(112, NrLanes, ew)] = 112;
+        index[shuffle_index(113, NrLanes, ew)] = 113;
+        index[shuffle_index(114, NrLanes, ew)] = 114;
+        index[shuffle_index(115, NrLanes, ew)] = 115;
+        index[shuffle_index(116, NrLanes, ew)] = 116;
+        index[shuffle_index(117, NrLanes, ew)] = 117;
+        index[shuffle_index(118, NrLanes, ew)] = 118;
+        index[shuffle_index(119, NrLanes, ew)] = 119;
+        index[shuffle_index(120, NrLanes, ew)] = 120;
+        index[shuffle_index(121, NrLanes, ew)] = 121;
+        index[shuffle_index(122, NrLanes, ew)] = 122;
+        index[shuffle_index(123, NrLanes, ew)] = 123;
+        index[shuffle_index(124, NrLanes, ew)] = 124;
+        index[shuffle_index(125, NrLanes, ew)] = 125;
+        index[shuffle_index(126, NrLanes, ew)] = 126;
+        index[shuffle_index(127, NrLanes, ew)] = 127;
         return index[byte_index[6:0]];
       end
     endcase
